{"version":3,"sources":["webpack:///src/app/pages/employee/employee-list/employee-list.page.html","webpack:///src/app/pages/employee/employee-list/employee-list-routing.module.ts","webpack:///src/app/pages/employee/employee-list/employee-list.module.ts","webpack:///src/app/pages/employee/employee-list/employee-list.page.scss","webpack:///src/app/pages/employee/employee-list/employee-list.page.ts"],"names":["routes","path","component","EmployeeListPageRoutingModule","imports","forChild","exports","EmployeeListPageModule","declarations","EmployeeListPage","loading","router","empservices","alertController","allEmployees","event","console","log","getEmployees","setTimeout","target","complete","value","length","data","employee","i","name","toLowerCase","slice","push","present","postData","FormData","append","JSON","stringify","getEmployeeDetails","subscribe","employeeId","dismiss","onerror","status","presentToastWarning","presentToastError","empDetails","navigationExtras","state","navigate","id","create","cssClass","header","message","buttons","text","role","handler","updateData","deleteEmployee","presentToastSuccess","success","alert","navigateByUrl","selector","template"],"mappings":"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","file":"pages-employee-employee-list-employee-list-module-es5.js","sourcesContent":["export default \"\\n  <ion-header [translucent]=\\\"true\\\">\\n    <ion-toolbar>\\n      <ion-buttons slot=\\\"start\\\">\\n        <ion-menu-button></ion-menu-button>\\n      </ion-buttons>\\n      <ion-title>Employee List</ion-title>\\n    </ion-toolbar>\\n  </ion-header>\\n  \\n  <ion-content [fullscreen]=\\\"true\\\">\\n\\n    <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"doRefresh($event)\\\">\\n      <ion-refresher-content\\n        pullingText=\\\"Pull to refresh\\\"\\n        refreshingSpinner=\\\"circles\\\">\\n      </ion-refresher-content>\\n    </ion-refresher>\\n\\n          <!-- fab placed to the (vertical) center and end -->\\n          <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\">\\n            <ion-fab-button (click)=\\\"createEmployee()\\\">\\n              <ion-icon name=\\\"add\\\"></ion-icon>\\n            </ion-fab-button>\\n          </ion-fab>\\n    \\n    <ion-searchbar showCancelButton=\\\"focus\\\" (ionInput)=\\\"findEmployeeName($event)\\\"></ion-searchbar>\\n      <ion-list>\\n          <ion-grid *ngFor =\\\"let emplo of allEmployees\\\">\\n            <ion-row style=\\\"background-color: #FAFAFA;\\\" >\\n              <ion-col size=\\\"3\\\" *ngIf=\\\"!emplo.image\\\">\\n                <img src=\\\"assets/icons/test.jpg\\\" class=\\\"imageSize\\\">\\n              </ion-col>\\n              <ion-col size=\\\"3\\\"*ngIf=\\\"emplo.image\\\">\\n                <img src=\\\"{{emplo.image}}\\\" class=\\\"imageSize\\\">\\n              </ion-col>\\n              <ion-col class=\\\"textClass\\\">\\n                <b>{{emplo.name}}</b>\\n               <p>Employee id : E000{{emplo.id}}</p>\\n              </ion-col>\\n              <ion-col class=\\\"iconClass\\\" size=\\\"3\\\" style=\\\"text-align: center;\\\">\\n                <ion-icon (click)=\\\"editEmployee(emplo)\\\" name=\\\"create-outline\\\"></ion-icon>\\n                <ion-icon (click)=\\\"deleteEmployee(emplo.id)\\\" name=\\\"close-circle\\\" style=\\\"color: red;\\\"></ion-icon>\\n\\n              </ion-col>\\n            </ion-row>\\n            </ion-grid>\\n      </ion-list>\\n\\n\\n      <ion-infinite-scroll threshold=\\\"100px\\\" (ionInfinite)=\\\"loadData($event)\\\">\\n        <ion-infinite-scroll-content\\n          loadingSpinner=\\\"bubbles\\\"\\n          loadingText=\\\"Loading...\\\">\\n        </ion-infinite-scroll-content>\\n      </ion-infinite-scroll>\\n      \\n  </ion-content>\\n  \";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { EmployeeListPage } from './employee-list.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EmployeeListPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EmployeeListPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EmployeeListPageRoutingModule } from './employee-list-routing.module';\n\nimport { EmployeeListPage } from './employee-list.page';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  imports: [\n    ReactiveFormsModule,\n    RouterModule,\n    HttpClientModule,\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    EmployeeListPageRoutingModule\n  ],\n  declarations: [EmployeeListPage]\n})\nexport class EmployeeListPageModule {}\n","export default \"p {\\n  margin: 1px;\\n  padding: 0px;\\n  font-size: 3vw;\\n}\\n\\nb {\\n  color: #6B3D1A;\\n}\\n\\n.scroll-content {\\n  padding-top: 0px !important;\\n}\\n\\n.iconClass {\\n  padding: 0px;\\n  margin: 5vw 0vw 0vw 0vw;\\n}\\n\\nion-icon {\\n  font-size: 4vh;\\n  margin-left: 1px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvZW1wbG95ZWUvZW1wbG95ZWUtbGlzdC9lbXBsb3llZS1saXN0LnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFdBQUE7RUFDQSxZQUFBO0VBQ0EsY0FBQTtBQUNKOztBQUNBO0VBQ0ksY0FBQTtBQUVKOztBQUFBO0VBQ0ksMkJBQUE7QUFHSjs7QUFEQTtFQUNJLFlBQUE7RUFDQSx1QkFBQTtBQUlKOztBQURBO0VBQ0ksY0FBQTtFQUNBLGdCQUFBO0FBSUoiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9lbXBsb3llZS9lbXBsb3llZS1saXN0L2VtcGxveWVlLWxpc3QucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsicHtcclxuICAgIG1hcmdpbjogMXB4O1xyXG4gICAgcGFkZGluZzogMHB4O1xyXG4gICAgZm9udC1zaXplOiAzdnc7XHJcbn1cclxuYntcclxuICAgIGNvbG9yOiAjNkIzRDFBO1xyXG59XHJcbi5zY3JvbGwtY29udGVudCB7XHJcbiAgICBwYWRkaW5nLXRvcDogMHB4ICFpbXBvcnRhbnQ7XHJcbiAgfVxyXG4uaWNvbkNsYXNzIHtcclxuICAgIHBhZGRpbmc6IDBweDtcclxuICAgIG1hcmdpbjogNXZ3IDB2dyAwdncgMHZ3XHJcbn1cclxuXHJcbmlvbi1pY29uIHtcclxuICAgIGZvbnQtc2l6ZTogNHZoO1xyXG4gICAgbWFyZ2luLWxlZnQ6IDFweDtcclxufSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { NavigationExtras, Router } from '@angular/router';\nimport { AlertController } from '@ionic/angular';\nimport { reduce } from 'rxjs/operators';\nimport { AlertService } from 'src/app/services/alert.service';\nimport { EmployeeService } from '../employee.service';\n\n@Component({\n  selector: 'app-employee-list',\n  templateUrl: './employee-list.page.html',\n  styleUrls: ['./employee-list.page.scss'],\n})\nexport class EmployeeListPage implements OnInit {\n  allEmployees =[];\n  employee:any;\n  employeeId: any;\n  value: any;\n\n  constructor(private loading : AlertService , private router: Router,private empservices: EmployeeService ,public alertController: AlertController) {\n  }\n  \n  doRefresh(event) {\n    console.log('Begin async operation');\n    this.getEmployees();\n    setTimeout(() => {\n      console.log('Async operation has ended');\n      event.target.complete();\n    }, 2000);\n  }\n\n  loadData(event) {\n    setTimeout(() => {\n      console.log('Done');\n      console.log(event);\n     // this.getSellers();\n      // if (this.categories.length == this.categories.length) {\n      //   event.target.disabled = true;\n      // }\n      event.target.complete();\n    }, 2000);\n  }\n\n  ionViewWillEnter(){\n    this.getEmployees();\n  }\n\n\n  findEmployeeName(event)\n  {\n    console.log(this.allEmployees);\n    if (event.target.value.length>0) {\n      var data = [];\n      console.log(this.employee);\n        for (let i = 0; i < this.employee.length; i++) {\n          const name = this.employee[i].name.toLowerCase();\n          if (name.slice(0, event.target.value.length) == event.target.value.toLowerCase()) {\n              data.push(this.employee[i]);\n          }\n        }\n        this.allEmployees = data;\n        console.log(this.allEmployees);\n      }\n      else {\n            this.allEmployees=this.employee;\n          }\n  }\n\n  getEmployees()\n  {\n      this.loading.present();\n      const postData = new FormData();\n      postData.append('skip_id', JSON.stringify(this.value));\n      this.empservices.getEmployeeDetails(postData).subscribe(\n      data => {\n        console.log(data);\n        this.employeeId = data.data;\n        this.employee = data.data\n        this.allEmployees = data.data\n        if(data.length>0)\n        {\n          this.value = this.value + data.data.length;\n          this.allEmployees.push(data.data);\n        }\n        this.loading.dismiss();\n      }, onerror => {\n      if (onerror.status==0) {\n        this.loading.presentToastWarning('check your internet connection.');\n        this.loading.dismiss();\n      } else if(onerror.status==500) {\n      this.loading.presentToastError('Server error.');\n      this.loading.dismiss();\n      }\n      });\n  }\n\n  editEmployee(empDetails){\n    console.log(empDetails);\n    let navigationExtras : NavigationExtras = {\n      state :{\n        empDetails : empDetails\n      }\n    }\n    this.router.navigate(['/create-employee'] , navigationExtras);\n  }\n\n\n  async deleteEmployee(id){\n    const alert = await this.alertController.create({\n      cssClass: 'my-custom-class',\n      header: 'Are You Sure',\n      message: '<small>You Want To Delete This ?</small>',\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'success',\n        }, {\n          text: 'Ok',\n          handler: () => {\n              this.loading.present();\n              const updateData = new FormData();\n              updateData.append('id', id);\n              this.empservices.deleteEmployee(updateData).subscribe(\n              data => {\n                console.log(data);\n                this.loading.dismiss();\n                this.loading.presentToastSuccess(data.success);\n                this.getEmployees();\n               // this.router.navigateByUrl('/employee-list');\n              }, onerror => {\n              if (onerror.status==0) {\n                this.loading.presentToastWarning('check your internet connection.');\n                this.loading.dismiss();\n              } else if(onerror.status==500) {\n              this.loading.dismiss();\n              this.loading.presentToastError('Server error.');\n              }\n              });\n           }\n        }\n      ]\n    });\n\n    await alert.present();\n  }\n\n\n  createEmployee(){\n    this.router.navigateByUrl('/create-employee');\n  }\n\n  ngOnInit() {\n  }\n\n}\n"]}